// Code generated by goctl. DO NOT EDIT!
// Source: otp.proto

package otpclient

import (
	"context"

	"github.com/thunderfire888/thunderfire_otp/rpc/otp"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	OtpData          = otp.OtpData
	OtpGenRequest    = otp.OtpGenRequest
	OtpGenResponse   = otp.OtpGenResponse
	OtpVaildRequest  = otp.OtpVaildRequest
	OtpVaildResponse = otp.OtpVaildResponse

	Otp interface {
		GenOtp(ctx context.Context, in *OtpGenRequest, opts ...grpc.CallOption) (*OtpGenResponse, error)
		Validate(ctx context.Context, in *OtpVaildRequest, opts ...grpc.CallOption) (*OtpVaildResponse, error)
	}

	defaultOtp struct {
		cli zrpc.Client
	}
)

func NewOtp(cli zrpc.Client) Otp {
	return &defaultOtp{
		cli: cli,
	}
}

func (m *defaultOtp) GenOtp(ctx context.Context, in *OtpGenRequest, opts ...grpc.CallOption) (*OtpGenResponse, error) {
	client := otp.NewOtpClient(m.cli.Conn())
	return client.GenOtp(ctx, in, opts...)
}

func (m *defaultOtp) Validate(ctx context.Context, in *OtpVaildRequest, opts ...grpc.CallOption) (*OtpVaildResponse, error) {
	client := otp.NewOtpClient(m.cli.Conn())
	return client.Validate(ctx, in, opts...)
}
