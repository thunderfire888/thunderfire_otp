// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: otp.proto

package otp

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OtpGenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issuer  string `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *OtpGenRequest) Reset() {
	*x = OtpGenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_otp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtpGenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtpGenRequest) ProtoMessage() {}

func (x *OtpGenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_otp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtpGenRequest.ProtoReflect.Descriptor instead.
func (*OtpGenRequest) Descriptor() ([]byte, []int) {
	return file_otp_proto_rawDescGZIP(), []int{0}
}

func (x *OtpGenRequest) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *OtpGenRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type OtpGenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *OtpData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OtpGenResponse) Reset() {
	*x = OtpGenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_otp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtpGenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtpGenResponse) ProtoMessage() {}

func (x *OtpGenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_otp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtpGenResponse.ProtoReflect.Descriptor instead.
func (*OtpGenResponse) Descriptor() ([]byte, []int) {
	return file_otp_proto_rawDescGZIP(), []int{1}
}

func (x *OtpGenResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OtpGenResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OtpGenResponse) GetData() *OtpData {
	if x != nil {
		return x.Data
	}
	return nil
}

type OtpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	Qrcode string `protobuf:"bytes,2,opt,name=qrcode,proto3" json:"qrcode,omitempty"`
}

func (x *OtpData) Reset() {
	*x = OtpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_otp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtpData) ProtoMessage() {}

func (x *OtpData) ProtoReflect() protoreflect.Message {
	mi := &file_otp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtpData.ProtoReflect.Descriptor instead.
func (*OtpData) Descriptor() ([]byte, []int) {
	return file_otp_proto_rawDescGZIP(), []int{2}
}

func (x *OtpData) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *OtpData) GetQrcode() string {
	if x != nil {
		return x.Qrcode
	}
	return ""
}

type OtpVaildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PassCode string `protobuf:"bytes,1,opt,name=passCode,proto3" json:"passCode,omitempty"`
	Secret   string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *OtpVaildRequest) Reset() {
	*x = OtpVaildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_otp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtpVaildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtpVaildRequest) ProtoMessage() {}

func (x *OtpVaildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_otp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtpVaildRequest.ProtoReflect.Descriptor instead.
func (*OtpVaildRequest) Descriptor() ([]byte, []int) {
	return file_otp_proto_rawDescGZIP(), []int{3}
}

func (x *OtpVaildRequest) GetPassCode() string {
	if x != nil {
		return x.PassCode
	}
	return ""
}

func (x *OtpVaildRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type OtpVaildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vaild bool `protobuf:"varint,1,opt,name=vaild,proto3" json:"vaild,omitempty"`
}

func (x *OtpVaildResponse) Reset() {
	*x = OtpVaildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_otp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtpVaildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtpVaildResponse) ProtoMessage() {}

func (x *OtpVaildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_otp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtpVaildResponse.ProtoReflect.Descriptor instead.
func (*OtpVaildResponse) Descriptor() ([]byte, []int) {
	return file_otp_proto_rawDescGZIP(), []int{4}
}

func (x *OtpVaildResponse) GetVaild() bool {
	if x != nil {
		return x.Vaild
	}
	return false
}

var File_otp_proto protoreflect.FileDescriptor

var file_otp_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6f, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6f, 0x74, 0x70,
	0x22, 0x41, 0x0a, 0x0d, 0x4f, 0x74, 0x70, 0x47, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x0e, 0x4f, 0x74, 0x70, 0x47, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x74, 0x70, 0x2e, 0x4f, 0x74, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x39, 0x0a, 0x07, 0x4f, 0x74, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x45, 0x0a, 0x0f, 0x4f, 0x74, 0x70, 0x56, 0x61, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x28, 0x0a, 0x10, 0x4f, 0x74, 0x70, 0x56, 0x61,
	0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x69, 0x6c,
	0x64, 0x32, 0x71, 0x0a, 0x03, 0x4f, 0x74, 0x70, 0x12, 0x31, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x4f,
	0x74, 0x70, 0x12, 0x12, 0x2e, 0x6f, 0x74, 0x70, 0x2e, 0x4f, 0x74, 0x70, 0x47, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6f, 0x74, 0x70, 0x2e, 0x4f, 0x74, 0x70,
	0x47, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x6f, 0x74, 0x70, 0x2e, 0x4f, 0x74,
	0x70, 0x56, 0x61, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x6f, 0x74, 0x70, 0x2e, 0x4f, 0x74, 0x70, 0x56, 0x61, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x6f, 0x74, 0x70, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_otp_proto_rawDescOnce sync.Once
	file_otp_proto_rawDescData = file_otp_proto_rawDesc
)

func file_otp_proto_rawDescGZIP() []byte {
	file_otp_proto_rawDescOnce.Do(func() {
		file_otp_proto_rawDescData = protoimpl.X.CompressGZIP(file_otp_proto_rawDescData)
	})
	return file_otp_proto_rawDescData
}

var file_otp_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_otp_proto_goTypes = []interface{}{
	(*OtpGenRequest)(nil),    // 0: otp.OtpGenRequest
	(*OtpGenResponse)(nil),   // 1: otp.OtpGenResponse
	(*OtpData)(nil),          // 2: otp.OtpData
	(*OtpVaildRequest)(nil),  // 3: otp.OtpVaildRequest
	(*OtpVaildResponse)(nil), // 4: otp.OtpVaildResponse
}
var file_otp_proto_depIdxs = []int32{
	2, // 0: otp.OtpGenResponse.data:type_name -> otp.OtpData
	0, // 1: otp.Otp.GenOtp:input_type -> otp.OtpGenRequest
	3, // 2: otp.Otp.Validate:input_type -> otp.OtpVaildRequest
	1, // 3: otp.Otp.GenOtp:output_type -> otp.OtpGenResponse
	4, // 4: otp.Otp.Validate:output_type -> otp.OtpVaildResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_otp_proto_init() }
func file_otp_proto_init() {
	if File_otp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_otp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtpGenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_otp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtpGenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_otp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_otp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtpVaildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_otp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtpVaildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_otp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_otp_proto_goTypes,
		DependencyIndexes: file_otp_proto_depIdxs,
		MessageInfos:      file_otp_proto_msgTypes,
	}.Build()
	File_otp_proto = out.File
	file_otp_proto_rawDesc = nil
	file_otp_proto_goTypes = nil
	file_otp_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OtpClient is the client API for Otp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OtpClient interface {
	GenOtp(ctx context.Context, in *OtpGenRequest, opts ...grpc.CallOption) (*OtpGenResponse, error)
	Validate(ctx context.Context, in *OtpVaildRequest, opts ...grpc.CallOption) (*OtpVaildResponse, error)
}

type otpClient struct {
	cc grpc.ClientConnInterface
}

func NewOtpClient(cc grpc.ClientConnInterface) OtpClient {
	return &otpClient{cc}
}

func (c *otpClient) GenOtp(ctx context.Context, in *OtpGenRequest, opts ...grpc.CallOption) (*OtpGenResponse, error) {
	out := new(OtpGenResponse)
	err := c.cc.Invoke(ctx, "/otp.Otp/GenOtp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *otpClient) Validate(ctx context.Context, in *OtpVaildRequest, opts ...grpc.CallOption) (*OtpVaildResponse, error) {
	out := new(OtpVaildResponse)
	err := c.cc.Invoke(ctx, "/otp.Otp/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OtpServer is the server API for Otp service.
type OtpServer interface {
	GenOtp(context.Context, *OtpGenRequest) (*OtpGenResponse, error)
	Validate(context.Context, *OtpVaildRequest) (*OtpVaildResponse, error)
}

// UnimplementedOtpServer can be embedded to have forward compatible implementations.
type UnimplementedOtpServer struct {
}

func (*UnimplementedOtpServer) GenOtp(context.Context, *OtpGenRequest) (*OtpGenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenOtp not implemented")
}
func (*UnimplementedOtpServer) Validate(context.Context, *OtpVaildRequest) (*OtpVaildResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Validate not implemented")
}

func RegisterOtpServer(s *grpc.Server, srv OtpServer) {
	s.RegisterService(&_Otp_serviceDesc, srv)
}

func _Otp_GenOtp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OtpGenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OtpServer).GenOtp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/otp.Otp/GenOtp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OtpServer).GenOtp(ctx, req.(*OtpGenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Otp_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OtpVaildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OtpServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/otp.Otp/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OtpServer).Validate(ctx, req.(*OtpVaildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Otp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "otp.Otp",
	HandlerType: (*OtpServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenOtp",
			Handler:    _Otp_GenOtp_Handler,
		},
		{
			MethodName: "Validate",
			Handler:    _Otp_Validate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "otp.proto",
}
